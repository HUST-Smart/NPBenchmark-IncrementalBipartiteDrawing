// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IncrementalGraphDrawing.proto

#include "IncrementalGraphDrawing.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_IncrementalGraphDrawing_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_IncrementalGraphDrawing_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_IncrementalGraphDrawing_NodeList;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_IncrementalGraphDrawing_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_IncrementalGraphDrawing_Layer;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_IncrementalGraphDrawing_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_IncrementalGraphDrawing_LayeredGraph;
}  // namespace protobuf_IncrementalGraphDrawing_2eproto
namespace pb {
class IncrementalGraphDrawing_InputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IncrementalGraphDrawing_Input>
      _instance;
} _IncrementalGraphDrawing_Input_default_instance_;
class IncrementalGraphDrawing_OutputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IncrementalGraphDrawing_Output>
      _instance;
} _IncrementalGraphDrawing_Output_default_instance_;
class IncrementalGraphDrawing_LayeredGraphDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IncrementalGraphDrawing_LayeredGraph>
      _instance;
} _IncrementalGraphDrawing_LayeredGraph_default_instance_;
class IncrementalGraphDrawing_LayerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IncrementalGraphDrawing_Layer>
      _instance;
} _IncrementalGraphDrawing_Layer_default_instance_;
class IncrementalGraphDrawing_NodeListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IncrementalGraphDrawing_NodeList>
      _instance;
} _IncrementalGraphDrawing_NodeList_default_instance_;
class IncrementalGraphDrawingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IncrementalGraphDrawing>
      _instance;
} _IncrementalGraphDrawing_default_instance_;
class SubmissionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Submission>
      _instance;
} _Submission_default_instance_;
}  // namespace pb
namespace protobuf_IncrementalGraphDrawing_2eproto {
static void InitDefaultsIncrementalGraphDrawing_Input() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_IncrementalGraphDrawing_Input_default_instance_;
    new (ptr) ::pb::IncrementalGraphDrawing_Input();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::IncrementalGraphDrawing_Input::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_IncrementalGraphDrawing_Input =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsIncrementalGraphDrawing_Input}, {
      &protobuf_IncrementalGraphDrawing_2eproto::scc_info_IncrementalGraphDrawing_LayeredGraph.base,}};

static void InitDefaultsIncrementalGraphDrawing_Output() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_IncrementalGraphDrawing_Output_default_instance_;
    new (ptr) ::pb::IncrementalGraphDrawing_Output();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::IncrementalGraphDrawing_Output::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_IncrementalGraphDrawing_Output =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsIncrementalGraphDrawing_Output}, {
      &protobuf_IncrementalGraphDrawing_2eproto::scc_info_IncrementalGraphDrawing_NodeList.base,}};

static void InitDefaultsIncrementalGraphDrawing_LayeredGraph() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_IncrementalGraphDrawing_LayeredGraph_default_instance_;
    new (ptr) ::pb::IncrementalGraphDrawing_LayeredGraph();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::IncrementalGraphDrawing_LayeredGraph::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_IncrementalGraphDrawing_LayeredGraph =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsIncrementalGraphDrawing_LayeredGraph}, {
      &protobuf_IncrementalGraphDrawing_2eproto::scc_info_IncrementalGraphDrawing_Layer.base,}};

static void InitDefaultsIncrementalGraphDrawing_Layer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_IncrementalGraphDrawing_Layer_default_instance_;
    new (ptr) ::pb::IncrementalGraphDrawing_Layer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::IncrementalGraphDrawing_Layer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_IncrementalGraphDrawing_Layer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsIncrementalGraphDrawing_Layer}, {
      &protobuf_IncrementalGraphDrawing_2eproto::scc_info_IncrementalGraphDrawing_NodeList.base,}};

static void InitDefaultsIncrementalGraphDrawing_NodeList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_IncrementalGraphDrawing_NodeList_default_instance_;
    new (ptr) ::pb::IncrementalGraphDrawing_NodeList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::IncrementalGraphDrawing_NodeList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IncrementalGraphDrawing_NodeList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIncrementalGraphDrawing_NodeList}, {}};

static void InitDefaultsIncrementalGraphDrawing() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_IncrementalGraphDrawing_default_instance_;
    new (ptr) ::pb::IncrementalGraphDrawing();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::IncrementalGraphDrawing::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IncrementalGraphDrawing =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIncrementalGraphDrawing}, {}};

static void InitDefaultsSubmission() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_Submission_default_instance_;
    new (ptr) ::pb::Submission();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::Submission::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Submission =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSubmission}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_IncrementalGraphDrawing_Input.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IncrementalGraphDrawing_Output.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IncrementalGraphDrawing_LayeredGraph.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IncrementalGraphDrawing_Layer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IncrementalGraphDrawing_NodeList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IncrementalGraphDrawing.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Submission.base);
}

::google::protobuf::Metadata file_level_metadata[7];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::IncrementalGraphDrawing_Input, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::IncrementalGraphDrawing_Input, graph_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::IncrementalGraphDrawing_Output, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::IncrementalGraphDrawing_Output, orders_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::IncrementalGraphDrawing_LayeredGraph, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::IncrementalGraphDrawing_LayeredGraph, layers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::IncrementalGraphDrawing_LayeredGraph, oldnodenum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::IncrementalGraphDrawing_LayeredGraph, nodenum_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::IncrementalGraphDrawing_Layer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::IncrementalGraphDrawing_Layer, oldnodenum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::IncrementalGraphDrawing_Layer, nodenum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::IncrementalGraphDrawing_Layer, forwardlists_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::IncrementalGraphDrawing_NodeList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::IncrementalGraphDrawing_NodeList, nodes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::IncrementalGraphDrawing, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, author_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, algorithm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, thread_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, cpu_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, ram_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, compiler_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, os_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, problem_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, instance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, obj_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, date_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::pb::IncrementalGraphDrawing_Input)},
  { 6, -1, sizeof(::pb::IncrementalGraphDrawing_Output)},
  { 12, -1, sizeof(::pb::IncrementalGraphDrawing_LayeredGraph)},
  { 20, -1, sizeof(::pb::IncrementalGraphDrawing_Layer)},
  { 28, -1, sizeof(::pb::IncrementalGraphDrawing_NodeList)},
  { 34, -1, sizeof(::pb::IncrementalGraphDrawing)},
  { 39, -1, sizeof(::pb::Submission)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_IncrementalGraphDrawing_Input_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_IncrementalGraphDrawing_Output_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_IncrementalGraphDrawing_LayeredGraph_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_IncrementalGraphDrawing_Layer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_IncrementalGraphDrawing_NodeList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_IncrementalGraphDrawing_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_Submission_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "IncrementalGraphDrawing.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\035IncrementalGraphDrawing.proto\022\002pb\"\210\003\n\027"
      "IncrementalGraphDrawing\032@\n\005Input\0227\n\005grap"
      "h\030\001 \001(\0132(.pb.IncrementalGraphDrawing.Lay"
      "eredGraph\032>\n\006Output\0224\n\006orders\030\001 \003(\0132$.pb"
      ".IncrementalGraphDrawing.NodeList\032f\n\014Lay"
      "eredGraph\0221\n\006layers\030\001 \003(\0132!.pb.Increment"
      "alGraphDrawing.Layer\022\022\n\noldNodeNum\030\002 \001(\005"
      "\022\017\n\007nodeNum\030\004 \001(\005\032h\n\005Layer\022\022\n\noldNodeNum"
      "\030\001 \001(\005\022\017\n\007nodeNum\030\003 \001(\005\022:\n\014forwardLists\030"
      "\004 \003(\0132$.pb.IncrementalGraphDrawing.NodeL"
      "ist\032\031\n\010NodeList\022\r\n\005nodes\030\001 \003(\005\"\350\001\n\nSubmi"
      "ssion\022\016\n\006author\030\001 \001(\t\022\021\n\talgorithm\030\002 \001(\t"
      "\022\016\n\006thread\030\003 \001(\t\022\013\n\003cpu\030\004 \001(\t\022\013\n\003ram\030\005 \001"
      "(\t\022\020\n\010language\030\006 \001(\t\022\020\n\010compiler\030\007 \001(\t\022\n"
      "\n\002os\030\010 \001(\t\022\017\n\007problem\030\025 \001(\t\022\020\n\010instance\030"
      "\026 \001(\t\022\020\n\010duration\030\027 \001(\t\022\013\n\003obj\030\037 \001(\001\022\r\n\005"
      "email\030  \001(\t\022\014\n\004date\030! \001(\tB\035\n\002pbB\027Increme"
      "ntalGraphDrawingb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 704);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "IncrementalGraphDrawing.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_IncrementalGraphDrawing_2eproto
namespace pb {

// ===================================================================

void IncrementalGraphDrawing_Input::InitAsDefaultInstance() {
  ::pb::_IncrementalGraphDrawing_Input_default_instance_._instance.get_mutable()->graph_ = const_cast< ::pb::IncrementalGraphDrawing_LayeredGraph*>(
      ::pb::IncrementalGraphDrawing_LayeredGraph::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IncrementalGraphDrawing_Input::kGraphFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IncrementalGraphDrawing_Input::IncrementalGraphDrawing_Input()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IncrementalGraphDrawing_2eproto::scc_info_IncrementalGraphDrawing_Input.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.IncrementalGraphDrawing.Input)
}
IncrementalGraphDrawing_Input::IncrementalGraphDrawing_Input(const IncrementalGraphDrawing_Input& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_graph()) {
    graph_ = new ::pb::IncrementalGraphDrawing_LayeredGraph(*from.graph_);
  } else {
    graph_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:pb.IncrementalGraphDrawing.Input)
}

void IncrementalGraphDrawing_Input::SharedCtor() {
  graph_ = NULL;
}

IncrementalGraphDrawing_Input::~IncrementalGraphDrawing_Input() {
  // @@protoc_insertion_point(destructor:pb.IncrementalGraphDrawing.Input)
  SharedDtor();
}

void IncrementalGraphDrawing_Input::SharedDtor() {
  if (this != internal_default_instance()) delete graph_;
}

void IncrementalGraphDrawing_Input::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IncrementalGraphDrawing_Input::descriptor() {
  ::protobuf_IncrementalGraphDrawing_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IncrementalGraphDrawing_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IncrementalGraphDrawing_Input& IncrementalGraphDrawing_Input::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IncrementalGraphDrawing_2eproto::scc_info_IncrementalGraphDrawing_Input.base);
  return *internal_default_instance();
}


void IncrementalGraphDrawing_Input::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.IncrementalGraphDrawing.Input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && graph_ != NULL) {
    delete graph_;
  }
  graph_ = NULL;
  _internal_metadata_.Clear();
}

bool IncrementalGraphDrawing_Input::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.IncrementalGraphDrawing.Input)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .pb.IncrementalGraphDrawing.LayeredGraph graph = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_graph()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.IncrementalGraphDrawing.Input)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.IncrementalGraphDrawing.Input)
  return false;
#undef DO_
}

void IncrementalGraphDrawing_Input::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.IncrementalGraphDrawing.Input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.IncrementalGraphDrawing.LayeredGraph graph = 1;
  if (this->has_graph()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_graph(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.IncrementalGraphDrawing.Input)
}

::google::protobuf::uint8* IncrementalGraphDrawing_Input::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.IncrementalGraphDrawing.Input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.IncrementalGraphDrawing.LayeredGraph graph = 1;
  if (this->has_graph()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_graph(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.IncrementalGraphDrawing.Input)
  return target;
}

size_t IncrementalGraphDrawing_Input::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.IncrementalGraphDrawing.Input)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .pb.IncrementalGraphDrawing.LayeredGraph graph = 1;
  if (this->has_graph()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *graph_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IncrementalGraphDrawing_Input::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.IncrementalGraphDrawing.Input)
  GOOGLE_DCHECK_NE(&from, this);
  const IncrementalGraphDrawing_Input* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IncrementalGraphDrawing_Input>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.IncrementalGraphDrawing.Input)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.IncrementalGraphDrawing.Input)
    MergeFrom(*source);
  }
}

void IncrementalGraphDrawing_Input::MergeFrom(const IncrementalGraphDrawing_Input& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.IncrementalGraphDrawing.Input)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_graph()) {
    mutable_graph()->::pb::IncrementalGraphDrawing_LayeredGraph::MergeFrom(from.graph());
  }
}

void IncrementalGraphDrawing_Input::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.IncrementalGraphDrawing.Input)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IncrementalGraphDrawing_Input::CopyFrom(const IncrementalGraphDrawing_Input& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.IncrementalGraphDrawing.Input)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IncrementalGraphDrawing_Input::IsInitialized() const {
  return true;
}

void IncrementalGraphDrawing_Input::Swap(IncrementalGraphDrawing_Input* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IncrementalGraphDrawing_Input::InternalSwap(IncrementalGraphDrawing_Input* other) {
  using std::swap;
  swap(graph_, other->graph_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IncrementalGraphDrawing_Input::GetMetadata() const {
  protobuf_IncrementalGraphDrawing_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IncrementalGraphDrawing_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IncrementalGraphDrawing_Output::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IncrementalGraphDrawing_Output::kOrdersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IncrementalGraphDrawing_Output::IncrementalGraphDrawing_Output()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IncrementalGraphDrawing_2eproto::scc_info_IncrementalGraphDrawing_Output.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.IncrementalGraphDrawing.Output)
}
IncrementalGraphDrawing_Output::IncrementalGraphDrawing_Output(const IncrementalGraphDrawing_Output& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      orders_(from.orders_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.IncrementalGraphDrawing.Output)
}

void IncrementalGraphDrawing_Output::SharedCtor() {
}

IncrementalGraphDrawing_Output::~IncrementalGraphDrawing_Output() {
  // @@protoc_insertion_point(destructor:pb.IncrementalGraphDrawing.Output)
  SharedDtor();
}

void IncrementalGraphDrawing_Output::SharedDtor() {
}

void IncrementalGraphDrawing_Output::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IncrementalGraphDrawing_Output::descriptor() {
  ::protobuf_IncrementalGraphDrawing_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IncrementalGraphDrawing_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IncrementalGraphDrawing_Output& IncrementalGraphDrawing_Output::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IncrementalGraphDrawing_2eproto::scc_info_IncrementalGraphDrawing_Output.base);
  return *internal_default_instance();
}


void IncrementalGraphDrawing_Output::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.IncrementalGraphDrawing.Output)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  orders_.Clear();
  _internal_metadata_.Clear();
}

bool IncrementalGraphDrawing_Output::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.IncrementalGraphDrawing.Output)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.IncrementalGraphDrawing.NodeList orders = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_orders()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.IncrementalGraphDrawing.Output)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.IncrementalGraphDrawing.Output)
  return false;
#undef DO_
}

void IncrementalGraphDrawing_Output::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.IncrementalGraphDrawing.Output)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.IncrementalGraphDrawing.NodeList orders = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->orders_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->orders(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.IncrementalGraphDrawing.Output)
}

::google::protobuf::uint8* IncrementalGraphDrawing_Output::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.IncrementalGraphDrawing.Output)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.IncrementalGraphDrawing.NodeList orders = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->orders_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->orders(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.IncrementalGraphDrawing.Output)
  return target;
}

size_t IncrementalGraphDrawing_Output::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.IncrementalGraphDrawing.Output)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .pb.IncrementalGraphDrawing.NodeList orders = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->orders_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->orders(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IncrementalGraphDrawing_Output::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.IncrementalGraphDrawing.Output)
  GOOGLE_DCHECK_NE(&from, this);
  const IncrementalGraphDrawing_Output* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IncrementalGraphDrawing_Output>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.IncrementalGraphDrawing.Output)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.IncrementalGraphDrawing.Output)
    MergeFrom(*source);
  }
}

void IncrementalGraphDrawing_Output::MergeFrom(const IncrementalGraphDrawing_Output& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.IncrementalGraphDrawing.Output)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  orders_.MergeFrom(from.orders_);
}

void IncrementalGraphDrawing_Output::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.IncrementalGraphDrawing.Output)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IncrementalGraphDrawing_Output::CopyFrom(const IncrementalGraphDrawing_Output& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.IncrementalGraphDrawing.Output)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IncrementalGraphDrawing_Output::IsInitialized() const {
  return true;
}

void IncrementalGraphDrawing_Output::Swap(IncrementalGraphDrawing_Output* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IncrementalGraphDrawing_Output::InternalSwap(IncrementalGraphDrawing_Output* other) {
  using std::swap;
  CastToBase(&orders_)->InternalSwap(CastToBase(&other->orders_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IncrementalGraphDrawing_Output::GetMetadata() const {
  protobuf_IncrementalGraphDrawing_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IncrementalGraphDrawing_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IncrementalGraphDrawing_LayeredGraph::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IncrementalGraphDrawing_LayeredGraph::kLayersFieldNumber;
const int IncrementalGraphDrawing_LayeredGraph::kOldNodeNumFieldNumber;
const int IncrementalGraphDrawing_LayeredGraph::kNodeNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IncrementalGraphDrawing_LayeredGraph::IncrementalGraphDrawing_LayeredGraph()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IncrementalGraphDrawing_2eproto::scc_info_IncrementalGraphDrawing_LayeredGraph.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.IncrementalGraphDrawing.LayeredGraph)
}
IncrementalGraphDrawing_LayeredGraph::IncrementalGraphDrawing_LayeredGraph(const IncrementalGraphDrawing_LayeredGraph& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      layers_(from.layers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&oldnodenum_, &from.oldnodenum_,
    static_cast<size_t>(reinterpret_cast<char*>(&nodenum_) -
    reinterpret_cast<char*>(&oldnodenum_)) + sizeof(nodenum_));
  // @@protoc_insertion_point(copy_constructor:pb.IncrementalGraphDrawing.LayeredGraph)
}

void IncrementalGraphDrawing_LayeredGraph::SharedCtor() {
  ::memset(&oldnodenum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nodenum_) -
      reinterpret_cast<char*>(&oldnodenum_)) + sizeof(nodenum_));
}

IncrementalGraphDrawing_LayeredGraph::~IncrementalGraphDrawing_LayeredGraph() {
  // @@protoc_insertion_point(destructor:pb.IncrementalGraphDrawing.LayeredGraph)
  SharedDtor();
}

void IncrementalGraphDrawing_LayeredGraph::SharedDtor() {
}

void IncrementalGraphDrawing_LayeredGraph::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IncrementalGraphDrawing_LayeredGraph::descriptor() {
  ::protobuf_IncrementalGraphDrawing_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IncrementalGraphDrawing_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IncrementalGraphDrawing_LayeredGraph& IncrementalGraphDrawing_LayeredGraph::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IncrementalGraphDrawing_2eproto::scc_info_IncrementalGraphDrawing_LayeredGraph.base);
  return *internal_default_instance();
}


void IncrementalGraphDrawing_LayeredGraph::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.IncrementalGraphDrawing.LayeredGraph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  layers_.Clear();
  ::memset(&oldnodenum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nodenum_) -
      reinterpret_cast<char*>(&oldnodenum_)) + sizeof(nodenum_));
  _internal_metadata_.Clear();
}

bool IncrementalGraphDrawing_LayeredGraph::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.IncrementalGraphDrawing.LayeredGraph)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.IncrementalGraphDrawing.Layer layers = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_layers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 oldNodeNum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &oldnodenum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nodeNum = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nodenum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.IncrementalGraphDrawing.LayeredGraph)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.IncrementalGraphDrawing.LayeredGraph)
  return false;
#undef DO_
}

void IncrementalGraphDrawing_LayeredGraph::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.IncrementalGraphDrawing.LayeredGraph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.IncrementalGraphDrawing.Layer layers = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->layers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->layers(static_cast<int>(i)),
      output);
  }

  // int32 oldNodeNum = 2;
  if (this->oldnodenum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->oldnodenum(), output);
  }

  // int32 nodeNum = 4;
  if (this->nodenum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->nodenum(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.IncrementalGraphDrawing.LayeredGraph)
}

::google::protobuf::uint8* IncrementalGraphDrawing_LayeredGraph::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.IncrementalGraphDrawing.LayeredGraph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.IncrementalGraphDrawing.Layer layers = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->layers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->layers(static_cast<int>(i)), deterministic, target);
  }

  // int32 oldNodeNum = 2;
  if (this->oldnodenum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->oldnodenum(), target);
  }

  // int32 nodeNum = 4;
  if (this->nodenum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->nodenum(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.IncrementalGraphDrawing.LayeredGraph)
  return target;
}

size_t IncrementalGraphDrawing_LayeredGraph::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.IncrementalGraphDrawing.LayeredGraph)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .pb.IncrementalGraphDrawing.Layer layers = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->layers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->layers(static_cast<int>(i)));
    }
  }

  // int32 oldNodeNum = 2;
  if (this->oldnodenum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->oldnodenum());
  }

  // int32 nodeNum = 4;
  if (this->nodenum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nodenum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IncrementalGraphDrawing_LayeredGraph::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.IncrementalGraphDrawing.LayeredGraph)
  GOOGLE_DCHECK_NE(&from, this);
  const IncrementalGraphDrawing_LayeredGraph* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IncrementalGraphDrawing_LayeredGraph>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.IncrementalGraphDrawing.LayeredGraph)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.IncrementalGraphDrawing.LayeredGraph)
    MergeFrom(*source);
  }
}

void IncrementalGraphDrawing_LayeredGraph::MergeFrom(const IncrementalGraphDrawing_LayeredGraph& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.IncrementalGraphDrawing.LayeredGraph)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  layers_.MergeFrom(from.layers_);
  if (from.oldnodenum() != 0) {
    set_oldnodenum(from.oldnodenum());
  }
  if (from.nodenum() != 0) {
    set_nodenum(from.nodenum());
  }
}

void IncrementalGraphDrawing_LayeredGraph::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.IncrementalGraphDrawing.LayeredGraph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IncrementalGraphDrawing_LayeredGraph::CopyFrom(const IncrementalGraphDrawing_LayeredGraph& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.IncrementalGraphDrawing.LayeredGraph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IncrementalGraphDrawing_LayeredGraph::IsInitialized() const {
  return true;
}

void IncrementalGraphDrawing_LayeredGraph::Swap(IncrementalGraphDrawing_LayeredGraph* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IncrementalGraphDrawing_LayeredGraph::InternalSwap(IncrementalGraphDrawing_LayeredGraph* other) {
  using std::swap;
  CastToBase(&layers_)->InternalSwap(CastToBase(&other->layers_));
  swap(oldnodenum_, other->oldnodenum_);
  swap(nodenum_, other->nodenum_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IncrementalGraphDrawing_LayeredGraph::GetMetadata() const {
  protobuf_IncrementalGraphDrawing_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IncrementalGraphDrawing_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IncrementalGraphDrawing_Layer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IncrementalGraphDrawing_Layer::kOldNodeNumFieldNumber;
const int IncrementalGraphDrawing_Layer::kNodeNumFieldNumber;
const int IncrementalGraphDrawing_Layer::kForwardListsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IncrementalGraphDrawing_Layer::IncrementalGraphDrawing_Layer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IncrementalGraphDrawing_2eproto::scc_info_IncrementalGraphDrawing_Layer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.IncrementalGraphDrawing.Layer)
}
IncrementalGraphDrawing_Layer::IncrementalGraphDrawing_Layer(const IncrementalGraphDrawing_Layer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      forwardlists_(from.forwardlists_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&oldnodenum_, &from.oldnodenum_,
    static_cast<size_t>(reinterpret_cast<char*>(&nodenum_) -
    reinterpret_cast<char*>(&oldnodenum_)) + sizeof(nodenum_));
  // @@protoc_insertion_point(copy_constructor:pb.IncrementalGraphDrawing.Layer)
}

void IncrementalGraphDrawing_Layer::SharedCtor() {
  ::memset(&oldnodenum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nodenum_) -
      reinterpret_cast<char*>(&oldnodenum_)) + sizeof(nodenum_));
}

IncrementalGraphDrawing_Layer::~IncrementalGraphDrawing_Layer() {
  // @@protoc_insertion_point(destructor:pb.IncrementalGraphDrawing.Layer)
  SharedDtor();
}

void IncrementalGraphDrawing_Layer::SharedDtor() {
}

void IncrementalGraphDrawing_Layer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IncrementalGraphDrawing_Layer::descriptor() {
  ::protobuf_IncrementalGraphDrawing_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IncrementalGraphDrawing_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IncrementalGraphDrawing_Layer& IncrementalGraphDrawing_Layer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IncrementalGraphDrawing_2eproto::scc_info_IncrementalGraphDrawing_Layer.base);
  return *internal_default_instance();
}


void IncrementalGraphDrawing_Layer::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.IncrementalGraphDrawing.Layer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  forwardlists_.Clear();
  ::memset(&oldnodenum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nodenum_) -
      reinterpret_cast<char*>(&oldnodenum_)) + sizeof(nodenum_));
  _internal_metadata_.Clear();
}

bool IncrementalGraphDrawing_Layer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.IncrementalGraphDrawing.Layer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 oldNodeNum = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &oldnodenum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 nodeNum = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nodenum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pb.IncrementalGraphDrawing.NodeList forwardLists = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_forwardlists()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.IncrementalGraphDrawing.Layer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.IncrementalGraphDrawing.Layer)
  return false;
#undef DO_
}

void IncrementalGraphDrawing_Layer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.IncrementalGraphDrawing.Layer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 oldNodeNum = 1;
  if (this->oldnodenum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->oldnodenum(), output);
  }

  // int32 nodeNum = 3;
  if (this->nodenum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->nodenum(), output);
  }

  // repeated .pb.IncrementalGraphDrawing.NodeList forwardLists = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->forwardlists_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->forwardlists(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.IncrementalGraphDrawing.Layer)
}

::google::protobuf::uint8* IncrementalGraphDrawing_Layer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.IncrementalGraphDrawing.Layer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 oldNodeNum = 1;
  if (this->oldnodenum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->oldnodenum(), target);
  }

  // int32 nodeNum = 3;
  if (this->nodenum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->nodenum(), target);
  }

  // repeated .pb.IncrementalGraphDrawing.NodeList forwardLists = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->forwardlists_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->forwardlists(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.IncrementalGraphDrawing.Layer)
  return target;
}

size_t IncrementalGraphDrawing_Layer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.IncrementalGraphDrawing.Layer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .pb.IncrementalGraphDrawing.NodeList forwardLists = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->forwardlists_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->forwardlists(static_cast<int>(i)));
    }
  }

  // int32 oldNodeNum = 1;
  if (this->oldnodenum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->oldnodenum());
  }

  // int32 nodeNum = 3;
  if (this->nodenum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nodenum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IncrementalGraphDrawing_Layer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.IncrementalGraphDrawing.Layer)
  GOOGLE_DCHECK_NE(&from, this);
  const IncrementalGraphDrawing_Layer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IncrementalGraphDrawing_Layer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.IncrementalGraphDrawing.Layer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.IncrementalGraphDrawing.Layer)
    MergeFrom(*source);
  }
}

void IncrementalGraphDrawing_Layer::MergeFrom(const IncrementalGraphDrawing_Layer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.IncrementalGraphDrawing.Layer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  forwardlists_.MergeFrom(from.forwardlists_);
  if (from.oldnodenum() != 0) {
    set_oldnodenum(from.oldnodenum());
  }
  if (from.nodenum() != 0) {
    set_nodenum(from.nodenum());
  }
}

void IncrementalGraphDrawing_Layer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.IncrementalGraphDrawing.Layer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IncrementalGraphDrawing_Layer::CopyFrom(const IncrementalGraphDrawing_Layer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.IncrementalGraphDrawing.Layer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IncrementalGraphDrawing_Layer::IsInitialized() const {
  return true;
}

void IncrementalGraphDrawing_Layer::Swap(IncrementalGraphDrawing_Layer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IncrementalGraphDrawing_Layer::InternalSwap(IncrementalGraphDrawing_Layer* other) {
  using std::swap;
  CastToBase(&forwardlists_)->InternalSwap(CastToBase(&other->forwardlists_));
  swap(oldnodenum_, other->oldnodenum_);
  swap(nodenum_, other->nodenum_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IncrementalGraphDrawing_Layer::GetMetadata() const {
  protobuf_IncrementalGraphDrawing_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IncrementalGraphDrawing_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IncrementalGraphDrawing_NodeList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IncrementalGraphDrawing_NodeList::kNodesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IncrementalGraphDrawing_NodeList::IncrementalGraphDrawing_NodeList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IncrementalGraphDrawing_2eproto::scc_info_IncrementalGraphDrawing_NodeList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.IncrementalGraphDrawing.NodeList)
}
IncrementalGraphDrawing_NodeList::IncrementalGraphDrawing_NodeList(const IncrementalGraphDrawing_NodeList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      nodes_(from.nodes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.IncrementalGraphDrawing.NodeList)
}

void IncrementalGraphDrawing_NodeList::SharedCtor() {
}

IncrementalGraphDrawing_NodeList::~IncrementalGraphDrawing_NodeList() {
  // @@protoc_insertion_point(destructor:pb.IncrementalGraphDrawing.NodeList)
  SharedDtor();
}

void IncrementalGraphDrawing_NodeList::SharedDtor() {
}

void IncrementalGraphDrawing_NodeList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IncrementalGraphDrawing_NodeList::descriptor() {
  ::protobuf_IncrementalGraphDrawing_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IncrementalGraphDrawing_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IncrementalGraphDrawing_NodeList& IncrementalGraphDrawing_NodeList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IncrementalGraphDrawing_2eproto::scc_info_IncrementalGraphDrawing_NodeList.base);
  return *internal_default_instance();
}


void IncrementalGraphDrawing_NodeList::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.IncrementalGraphDrawing.NodeList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nodes_.Clear();
  _internal_metadata_.Clear();
}

bool IncrementalGraphDrawing_NodeList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.IncrementalGraphDrawing.NodeList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 nodes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_nodes())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_nodes())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.IncrementalGraphDrawing.NodeList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.IncrementalGraphDrawing.NodeList)
  return false;
#undef DO_
}

void IncrementalGraphDrawing_NodeList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.IncrementalGraphDrawing.NodeList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 nodes = 1;
  if (this->nodes_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _nodes_cached_byte_size_));
  }
  for (int i = 0, n = this->nodes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->nodes(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.IncrementalGraphDrawing.NodeList)
}

::google::protobuf::uint8* IncrementalGraphDrawing_NodeList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.IncrementalGraphDrawing.NodeList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 nodes = 1;
  if (this->nodes_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _nodes_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->nodes_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.IncrementalGraphDrawing.NodeList)
  return target;
}

size_t IncrementalGraphDrawing_NodeList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.IncrementalGraphDrawing.NodeList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 nodes = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->nodes_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _nodes_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IncrementalGraphDrawing_NodeList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.IncrementalGraphDrawing.NodeList)
  GOOGLE_DCHECK_NE(&from, this);
  const IncrementalGraphDrawing_NodeList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IncrementalGraphDrawing_NodeList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.IncrementalGraphDrawing.NodeList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.IncrementalGraphDrawing.NodeList)
    MergeFrom(*source);
  }
}

void IncrementalGraphDrawing_NodeList::MergeFrom(const IncrementalGraphDrawing_NodeList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.IncrementalGraphDrawing.NodeList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nodes_.MergeFrom(from.nodes_);
}

void IncrementalGraphDrawing_NodeList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.IncrementalGraphDrawing.NodeList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IncrementalGraphDrawing_NodeList::CopyFrom(const IncrementalGraphDrawing_NodeList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.IncrementalGraphDrawing.NodeList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IncrementalGraphDrawing_NodeList::IsInitialized() const {
  return true;
}

void IncrementalGraphDrawing_NodeList::Swap(IncrementalGraphDrawing_NodeList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IncrementalGraphDrawing_NodeList::InternalSwap(IncrementalGraphDrawing_NodeList* other) {
  using std::swap;
  nodes_.InternalSwap(&other->nodes_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IncrementalGraphDrawing_NodeList::GetMetadata() const {
  protobuf_IncrementalGraphDrawing_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IncrementalGraphDrawing_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IncrementalGraphDrawing::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IncrementalGraphDrawing::IncrementalGraphDrawing()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IncrementalGraphDrawing_2eproto::scc_info_IncrementalGraphDrawing.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.IncrementalGraphDrawing)
}
IncrementalGraphDrawing::IncrementalGraphDrawing(const IncrementalGraphDrawing& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.IncrementalGraphDrawing)
}

void IncrementalGraphDrawing::SharedCtor() {
}

IncrementalGraphDrawing::~IncrementalGraphDrawing() {
  // @@protoc_insertion_point(destructor:pb.IncrementalGraphDrawing)
  SharedDtor();
}

void IncrementalGraphDrawing::SharedDtor() {
}

void IncrementalGraphDrawing::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IncrementalGraphDrawing::descriptor() {
  ::protobuf_IncrementalGraphDrawing_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IncrementalGraphDrawing_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IncrementalGraphDrawing& IncrementalGraphDrawing::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IncrementalGraphDrawing_2eproto::scc_info_IncrementalGraphDrawing.base);
  return *internal_default_instance();
}


void IncrementalGraphDrawing::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.IncrementalGraphDrawing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool IncrementalGraphDrawing::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.IncrementalGraphDrawing)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.IncrementalGraphDrawing)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.IncrementalGraphDrawing)
  return false;
#undef DO_
}

void IncrementalGraphDrawing::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.IncrementalGraphDrawing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.IncrementalGraphDrawing)
}

::google::protobuf::uint8* IncrementalGraphDrawing::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.IncrementalGraphDrawing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.IncrementalGraphDrawing)
  return target;
}

size_t IncrementalGraphDrawing::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.IncrementalGraphDrawing)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IncrementalGraphDrawing::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.IncrementalGraphDrawing)
  GOOGLE_DCHECK_NE(&from, this);
  const IncrementalGraphDrawing* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IncrementalGraphDrawing>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.IncrementalGraphDrawing)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.IncrementalGraphDrawing)
    MergeFrom(*source);
  }
}

void IncrementalGraphDrawing::MergeFrom(const IncrementalGraphDrawing& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.IncrementalGraphDrawing)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void IncrementalGraphDrawing::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.IncrementalGraphDrawing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IncrementalGraphDrawing::CopyFrom(const IncrementalGraphDrawing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.IncrementalGraphDrawing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IncrementalGraphDrawing::IsInitialized() const {
  return true;
}

void IncrementalGraphDrawing::Swap(IncrementalGraphDrawing* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IncrementalGraphDrawing::InternalSwap(IncrementalGraphDrawing* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IncrementalGraphDrawing::GetMetadata() const {
  protobuf_IncrementalGraphDrawing_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IncrementalGraphDrawing_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Submission::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Submission::kAuthorFieldNumber;
const int Submission::kAlgorithmFieldNumber;
const int Submission::kThreadFieldNumber;
const int Submission::kCpuFieldNumber;
const int Submission::kRamFieldNumber;
const int Submission::kLanguageFieldNumber;
const int Submission::kCompilerFieldNumber;
const int Submission::kOsFieldNumber;
const int Submission::kProblemFieldNumber;
const int Submission::kInstanceFieldNumber;
const int Submission::kDurationFieldNumber;
const int Submission::kObjFieldNumber;
const int Submission::kEmailFieldNumber;
const int Submission::kDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Submission::Submission()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_IncrementalGraphDrawing_2eproto::scc_info_Submission.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.Submission)
}
Submission::Submission(const Submission& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  author_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.author().size() > 0) {
    author_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.author_);
  }
  algorithm_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.algorithm().size() > 0) {
    algorithm_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.algorithm_);
  }
  thread_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.thread().size() > 0) {
    thread_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thread_);
  }
  cpu_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cpu().size() > 0) {
    cpu_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cpu_);
  }
  ram_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ram().size() > 0) {
    ram_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ram_);
  }
  language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.language().size() > 0) {
    language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_);
  }
  compiler_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.compiler().size() > 0) {
    compiler_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.compiler_);
  }
  os_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.os().size() > 0) {
    os_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.os_);
  }
  problem_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.problem().size() > 0) {
    problem_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.problem_);
  }
  instance_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instance().size() > 0) {
    instance_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_);
  }
  duration_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.duration().size() > 0) {
    duration_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.duration_);
  }
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.email().size() > 0) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.date().size() > 0) {
    date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
  }
  obj_ = from.obj_;
  // @@protoc_insertion_point(copy_constructor:pb.Submission)
}

void Submission::SharedCtor() {
  author_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  algorithm_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thread_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cpu_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ram_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  compiler_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  os_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  problem_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  duration_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  obj_ = 0;
}

Submission::~Submission() {
  // @@protoc_insertion_point(destructor:pb.Submission)
  SharedDtor();
}

void Submission::SharedDtor() {
  author_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  algorithm_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thread_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cpu_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ram_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  compiler_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  os_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  problem_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  duration_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Submission::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Submission::descriptor() {
  ::protobuf_IncrementalGraphDrawing_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IncrementalGraphDrawing_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Submission& Submission::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_IncrementalGraphDrawing_2eproto::scc_info_Submission.base);
  return *internal_default_instance();
}


void Submission::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.Submission)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  author_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  algorithm_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thread_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cpu_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ram_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  compiler_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  os_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  problem_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  duration_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  obj_ = 0;
  _internal_metadata_.Clear();
}

bool Submission::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.Submission)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string author = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_author()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->author().data(), static_cast<int>(this->author().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Submission.author"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string algorithm = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_algorithm()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->algorithm().data(), static_cast<int>(this->algorithm().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Submission.algorithm"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string thread = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_thread()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->thread().data(), static_cast<int>(this->thread().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Submission.thread"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cpu = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cpu()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cpu().data(), static_cast<int>(this->cpu().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Submission.cpu"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ram = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ram()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ram().data(), static_cast<int>(this->ram().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Submission.ram"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string language = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->language().data(), static_cast<int>(this->language().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Submission.language"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string compiler = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_compiler()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->compiler().data(), static_cast<int>(this->compiler().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Submission.compiler"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string os = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_os()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->os().data(), static_cast<int>(this->os().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Submission.os"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string problem = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_problem()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->problem().data(), static_cast<int>(this->problem().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Submission.problem"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string instance = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instance()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instance().data(), static_cast<int>(this->instance().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Submission.instance"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string duration = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_duration()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->duration().data(), static_cast<int>(this->duration().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Submission.duration"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double obj = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(249u /* 249 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &obj_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string email = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 258 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->email().data(), static_cast<int>(this->email().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Submission.email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string date = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 266 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_date()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->date().data(), static_cast<int>(this->date().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Submission.date"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.Submission)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.Submission)
  return false;
#undef DO_
}

void Submission::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.Submission)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string author = 1;
  if (this->author().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->author().data(), static_cast<int>(this->author().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.author");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->author(), output);
  }

  // string algorithm = 2;
  if (this->algorithm().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->algorithm().data(), static_cast<int>(this->algorithm().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.algorithm");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->algorithm(), output);
  }

  // string thread = 3;
  if (this->thread().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thread().data(), static_cast<int>(this->thread().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.thread");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->thread(), output);
  }

  // string cpu = 4;
  if (this->cpu().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cpu().data(), static_cast<int>(this->cpu().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.cpu");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->cpu(), output);
  }

  // string ram = 5;
  if (this->ram().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ram().data(), static_cast<int>(this->ram().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.ram");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->ram(), output);
  }

  // string language = 6;
  if (this->language().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language().data(), static_cast<int>(this->language().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.language");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->language(), output);
  }

  // string compiler = 7;
  if (this->compiler().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->compiler().data(), static_cast<int>(this->compiler().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.compiler");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->compiler(), output);
  }

  // string os = 8;
  if (this->os().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->os().data(), static_cast<int>(this->os().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.os");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->os(), output);
  }

  // string problem = 21;
  if (this->problem().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->problem().data(), static_cast<int>(this->problem().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.problem");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->problem(), output);
  }

  // string instance = 22;
  if (this->instance().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance().data(), static_cast<int>(this->instance().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.instance");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->instance(), output);
  }

  // string duration = 23;
  if (this->duration().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->duration().data(), static_cast<int>(this->duration().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.duration");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      23, this->duration(), output);
  }

  // double obj = 31;
  if (this->obj() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(31, this->obj(), output);
  }

  // string email = 32;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      32, this->email(), output);
  }

  // string date = 33;
  if (this->date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->date().data(), static_cast<int>(this->date().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      33, this->date(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.Submission)
}

::google::protobuf::uint8* Submission::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.Submission)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string author = 1;
  if (this->author().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->author().data(), static_cast<int>(this->author().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.author");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->author(), target);
  }

  // string algorithm = 2;
  if (this->algorithm().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->algorithm().data(), static_cast<int>(this->algorithm().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.algorithm");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->algorithm(), target);
  }

  // string thread = 3;
  if (this->thread().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thread().data(), static_cast<int>(this->thread().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.thread");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->thread(), target);
  }

  // string cpu = 4;
  if (this->cpu().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cpu().data(), static_cast<int>(this->cpu().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.cpu");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->cpu(), target);
  }

  // string ram = 5;
  if (this->ram().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ram().data(), static_cast<int>(this->ram().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.ram");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->ram(), target);
  }

  // string language = 6;
  if (this->language().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language().data(), static_cast<int>(this->language().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.language");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->language(), target);
  }

  // string compiler = 7;
  if (this->compiler().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->compiler().data(), static_cast<int>(this->compiler().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.compiler");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->compiler(), target);
  }

  // string os = 8;
  if (this->os().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->os().data(), static_cast<int>(this->os().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.os");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->os(), target);
  }

  // string problem = 21;
  if (this->problem().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->problem().data(), static_cast<int>(this->problem().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.problem");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->problem(), target);
  }

  // string instance = 22;
  if (this->instance().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance().data(), static_cast<int>(this->instance().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.instance");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->instance(), target);
  }

  // string duration = 23;
  if (this->duration().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->duration().data(), static_cast<int>(this->duration().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.duration");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->duration(), target);
  }

  // double obj = 31;
  if (this->obj() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(31, this->obj(), target);
  }

  // string email = 32;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        32, this->email(), target);
  }

  // string date = 33;
  if (this->date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->date().data(), static_cast<int>(this->date().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        33, this->date(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.Submission)
  return target;
}

size_t Submission::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.Submission)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string author = 1;
  if (this->author().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->author());
  }

  // string algorithm = 2;
  if (this->algorithm().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->algorithm());
  }

  // string thread = 3;
  if (this->thread().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->thread());
  }

  // string cpu = 4;
  if (this->cpu().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cpu());
  }

  // string ram = 5;
  if (this->ram().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ram());
  }

  // string language = 6;
  if (this->language().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->language());
  }

  // string compiler = 7;
  if (this->compiler().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->compiler());
  }

  // string os = 8;
  if (this->os().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->os());
  }

  // string problem = 21;
  if (this->problem().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->problem());
  }

  // string instance = 22;
  if (this->instance().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instance());
  }

  // string duration = 23;
  if (this->duration().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->duration());
  }

  // string email = 32;
  if (this->email().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  // string date = 33;
  if (this->date().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->date());
  }

  // double obj = 31;
  if (this->obj() != 0) {
    total_size += 2 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Submission::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.Submission)
  GOOGLE_DCHECK_NE(&from, this);
  const Submission* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Submission>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.Submission)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.Submission)
    MergeFrom(*source);
  }
}

void Submission::MergeFrom(const Submission& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.Submission)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.author().size() > 0) {

    author_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.author_);
  }
  if (from.algorithm().size() > 0) {

    algorithm_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.algorithm_);
  }
  if (from.thread().size() > 0) {

    thread_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thread_);
  }
  if (from.cpu().size() > 0) {

    cpu_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cpu_);
  }
  if (from.ram().size() > 0) {

    ram_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ram_);
  }
  if (from.language().size() > 0) {

    language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_);
  }
  if (from.compiler().size() > 0) {

    compiler_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.compiler_);
  }
  if (from.os().size() > 0) {

    os_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.os_);
  }
  if (from.problem().size() > 0) {

    problem_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.problem_);
  }
  if (from.instance().size() > 0) {

    instance_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_);
  }
  if (from.duration().size() > 0) {

    duration_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.duration_);
  }
  if (from.email().size() > 0) {

    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  if (from.date().size() > 0) {

    date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
  }
  if (from.obj() != 0) {
    set_obj(from.obj());
  }
}

void Submission::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.Submission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Submission::CopyFrom(const Submission& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.Submission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Submission::IsInitialized() const {
  return true;
}

void Submission::Swap(Submission* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Submission::InternalSwap(Submission* other) {
  using std::swap;
  author_.Swap(&other->author_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  algorithm_.Swap(&other->algorithm_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  thread_.Swap(&other->thread_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cpu_.Swap(&other->cpu_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ram_.Swap(&other->ram_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  language_.Swap(&other->language_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  compiler_.Swap(&other->compiler_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  os_.Swap(&other->os_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  problem_.Swap(&other->problem_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  instance_.Swap(&other->instance_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  duration_.Swap(&other->duration_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  email_.Swap(&other->email_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  date_.Swap(&other->date_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(obj_, other->obj_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Submission::GetMetadata() const {
  protobuf_IncrementalGraphDrawing_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_IncrementalGraphDrawing_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pb
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::IncrementalGraphDrawing_Input* Arena::CreateMaybeMessage< ::pb::IncrementalGraphDrawing_Input >(Arena* arena) {
  return Arena::CreateInternal< ::pb::IncrementalGraphDrawing_Input >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::IncrementalGraphDrawing_Output* Arena::CreateMaybeMessage< ::pb::IncrementalGraphDrawing_Output >(Arena* arena) {
  return Arena::CreateInternal< ::pb::IncrementalGraphDrawing_Output >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::IncrementalGraphDrawing_LayeredGraph* Arena::CreateMaybeMessage< ::pb::IncrementalGraphDrawing_LayeredGraph >(Arena* arena) {
  return Arena::CreateInternal< ::pb::IncrementalGraphDrawing_LayeredGraph >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::IncrementalGraphDrawing_Layer* Arena::CreateMaybeMessage< ::pb::IncrementalGraphDrawing_Layer >(Arena* arena) {
  return Arena::CreateInternal< ::pb::IncrementalGraphDrawing_Layer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::IncrementalGraphDrawing_NodeList* Arena::CreateMaybeMessage< ::pb::IncrementalGraphDrawing_NodeList >(Arena* arena) {
  return Arena::CreateInternal< ::pb::IncrementalGraphDrawing_NodeList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::IncrementalGraphDrawing* Arena::CreateMaybeMessage< ::pb::IncrementalGraphDrawing >(Arena* arena) {
  return Arena::CreateInternal< ::pb::IncrementalGraphDrawing >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::Submission* Arena::CreateMaybeMessage< ::pb::Submission >(Arena* arena) {
  return Arena::CreateInternal< ::pb::Submission >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
